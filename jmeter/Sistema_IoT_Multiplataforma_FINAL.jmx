<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="üîã Sistema IoT - Teste Resili√™ncia Multiplataforma FINAL">
      <stringProp name="TestPlan.comments">
        ‚ö° SISTEMA IOT DISTRIBU√çDO - TESTE COMPLETO MULTIPLATAFORMA
        
        üìä Arquitetura Testada:
        ‚úÖ Gateway IoT (Proxy para roteamento)
        ‚úÖ Data Receivers (Stateful instances)  
        ‚úÖ Monitoramento e Health Checks
        ‚úÖ Toler√¢ncia a Falhas ativa
        
        üåê Protocolos Suportados:
        üî∏ UDP (porta 9090) - Fire & forget com response capture
        üî∏ TCP (porta 8082) - Conex√µes persistentes
        üî∏ HTTP (porta 8081) - REST endpoints
        
        üß™ Cen√°rios de Teste:
        ‚úÖ SISTEMA ONLINE: 0% erros + lat√™ncia baixa
        ‚ùå SISTEMA OFFLINE: 100% erros + timeout/assertion failure  
        üîÑ RECUPERA√á√ÉO: Diminui√ß√£o gradual de erros
        
        üõ°Ô∏è TESTE DE RESILI√äNCIA REAL COM MULTI-PROTOCOLO! üõ°Ô∏è
      </stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - Config Properties">
        <collectionProp name="Arguments.arguments">
          <elementProp name="IOT_SERVER_HOST" elementType="Argument">
            <stringProp name="Argument.name">IOT_SERVER_HOST</stringProp>
            <stringProp name="Argument.value">${__property(IOT_SERVER_HOST,localhost)}</stringProp>
          </elementProp>
          <elementProp name="IOT_GATEWAY_PORT" elementType="Argument">
            <stringProp name="Argument.name">IOT_GATEWAY_PORT</stringProp>
            <stringProp name="Argument.value">${__property(IOT_GATEWAY_PORT,9090)}</stringProp>
          </elementProp>
          <elementProp name="TCP_PORT" elementType="Argument">
            <stringProp name="Argument.name">TCP_PORT</stringProp>
            <stringProp name="Argument.value">8082</stringProp>
          </elementProp>
          <elementProp name="HTTP_PORT" elementType="Argument">
            <stringProp name="Argument.name">HTTP_PORT</stringProp>
            <stringProp name="Argument.value">8081</stringProp>
          </elementProp>
          <elementProp name="BASE_LOAD_THREADS" elementType="Argument">
            <stringProp name="Argument.name">BASE_LOAD_THREADS</stringProp>
            <stringProp name="Argument.value">${__property(BASE_LOAD_THREADS,5)}</stringProp>
          </elementProp>
          <elementProp name="BASE_LOAD_DURATION" elementType="Argument">
            <stringProp name="Argument.name">BASE_LOAD_DURATION</stringProp>
            <stringProp name="Argument.value">${__property(BASE_LOAD_DURATION,300)}</stringProp>
          </elementProp>
          <elementProp name="SENSOR_DATA_INTERVAL" elementType="Argument">
            <stringProp name="Argument.name">SENSOR_DATA_INTERVAL</stringProp>
            <stringProp name="Argument.value">${__property(SENSOR_DATA_INTERVAL,3000)}</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
    </TestPlan>
    <hashTree>
      <!-- ============================= -->
      <!-- THREAD GROUP 1: UDP PROTOCOL -->
      <!-- ============================= -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="üî∏ Sensores IoT - Protocolo UDP">
        <intProp name="ThreadGroup.num_threads">${BASE_LOAD_THREADS}</intProp>
        <intProp name="ThreadGroup.ramp_time">5</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">10</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="üì° Registro Sensor IoT">
          <stringProp name="hostname">${IOT_SERVER_HOST}</stringProp>
          <stringProp name="port">${IOT_GATEWAY_PORT}</stringProp>
          <stringProp name="data">SENSOR_REGISTER|SENSOR_${__threadNum}_${__Random(1,999)}|TEMPERATURE|Lab-DIMAP-${__threadNum}|${__time()}|${__Random(20,35)}.${__Random(0,9)}</stringProp>
          <stringProp name="timeout">5000</stringProp>
          <boolProp name="closeConnection">false</boolProp>
          <boolProp name="soLinger">false</boolProp>
          <stringProp name="eolByte"></stringProp>
          <boolProp name="waitresponse">true</boolProp>
          <boolProp name="closechannel">false</boolProp>
          <stringProp name="encodeclass"></stringProp>
        </kg.apc.jmeter.samplers.UDPSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="‚úÖ UDP Response Validation" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1149187101">SUCCESS</stringProp>
              <stringProp name="1589864047">PROCESSED</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">ERRO UDP: Sistema n√£o respondeu com SUCCESS|PROCESSED - pode estar offline!</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="üìä Response Size Check" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">10</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">ERRO: Resposta UDP muito pequena - pode haver problema de comunica√ß√£o</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data_as_bytes</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">3</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="‚è±Ô∏è Realistic Delay">
          <stringProp name="ConstantTimer.delay">500</stringProp>
        </ConstantTimer>
        <hashTree/>
        <kg.apc.jmeter.samplers.UDPSampler guiclass="kg.apc.jmeter.samplers.UDPSamplerGui" testclass="kg.apc.jmeter.samplers.UDPSampler" testname="üìä Envio Dados IoT">
          <stringProp name="hostname">${IOT_SERVER_HOST}</stringProp>
          <stringProp name="port">${IOT_GATEWAY_PORT}</stringProp>
          <stringProp name="data">SENSOR_DATA|SENSOR_${__threadNum}_${__Random(1,999)}|TEMPERATURE|Lab-DIMAP-${__threadNum}|${__time()}|${__Random(15,40)}.${__Random(0,9)}</stringProp>
          <stringProp name="timeout">5000</stringProp>
          <boolProp name="closeConnection">false</boolProp>
          <boolProp name="soLinger">false</boolProp>
          <stringProp name="eolByte"></stringProp>
          <boolProp name="waitresponse">true</boolProp>
          <boolProp name="closechannel">false</boolProp>
          <stringProp name="encodeclass"></stringProp>
        </kg.apc.jmeter.samplers.UDPSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="‚úÖ UDP Response Validation" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1149187101">SUCCESS</stringProp>
              <stringProp name="1589864047">PROCESSED</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">ERRO UDP: Sistema n√£o respondeu com SUCCESS|PROCESSED - pode estar offline!</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="‚è±Ô∏è Data Interval">
          <stringProp name="ConstantTimer.delay">${SENSOR_DATA_INTERVAL}</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      
      <!-- ============================= -->
      <!-- THREAD GROUP 2: TCP PROTOCOL -->
      <!-- ============================= -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="üî∏ Sensores IoT - Protocolo TCP" enabled="false">
        <intProp name="ThreadGroup.num_threads">${BASE_LOAD_THREADS}</intProp>
        <intProp name="ThreadGroup.ramp_time">5</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">10</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="üì° TCP Registro Sensor">
          <stringProp name="TCPSampler.server">${IOT_SERVER_HOST}</stringProp>
          <stringProp name="TCPSampler.port">${TCP_PORT}</stringProp>
          <stringProp name="TCPSampler.timeout">5000</stringProp>
          <stringProp name="TCPSampler.request">SENSOR_REGISTER|SENSOR_${__threadNum}_${__Random(1,999)}|TEMPERATURE|Lab-DIMAP-${__threadNum}|${__time()}|${__Random(20,35)}.${__Random(0,9)}</stringProp>
          <boolProp name="TCPSampler.reUseConnection">true</boolProp>
          <stringProp name="TCPSampler.nodelay">false</stringProp>
          <stringProp name="TCPSampler.ctimeout">1000</stringProp>
          <stringProp name="TCPSampler.filename"></stringProp>
          <stringProp name="TCPSampler.classname">org.apache.jmeter.protocol.tcp.sampler.TCPClientImpl</stringProp>
        </TCPSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="‚úÖ TCP Response Validation">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1149187101">SUCCESS</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">ERRO TCP: Sistema n√£o respondeu com SUCCESS</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="‚è±Ô∏è TCP Delay">
          <stringProp name="ConstantTimer.delay">1000</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      
      <!-- ============================== -->
      <!-- THREAD GROUP 3: HTTP PROTOCOL -->
      <!-- ============================== -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="üî∏ Sensores IoT - Protocolo HTTP" enabled="false">
        <intProp name="ThreadGroup.num_threads">${BASE_LOAD_THREADS}</intProp>
        <intProp name="ThreadGroup.ramp_time">5</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">10</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="üì° HTTP POST Sensor Data">
          <stringProp name="HTTPSampler.domain">${IOT_SERVER_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${HTTP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/iot/sensors</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">5000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">5000</stringProp>
          <stringProp name="HTTPSampler.postBodyRaw">SENSOR_DATA|SENSOR_${__threadNum}_${__Random(1,999)}|TEMPERATURE|Lab-DIMAP-${__threadNum}|${__time()}|${__Random(15,40)}.${__Random(0,9)}</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="‚úÖ HTTP Success Response">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3059181">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">ERRO HTTP: Sistema n√£o retornou status 200</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="‚è±Ô∏è HTTP Delay">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      
      <!-- ================== -->
      <!-- LISTENERS & REPORTS -->
      <!-- ================== -->
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="üìä Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">${__property(SUMMARY_REPORT,jmeter/results/summary_final.jtl)}</stringProp>
      </ResultCollector>
      <hashTree/>
      
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="üîç View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>  
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">${__property(DETAILED_RESULTS,jmeter/results/detailed_final.jtl)}</stringProp>
      </ResultCollector>
      <hashTree/>
      
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="üìà Response Times Over Time" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>false</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">${__property(RESPONSE_TIMES,jmeter/results/response_times_final.jtl)}</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="üöÄ Transactions per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>false</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">${__property(TRANSACTIONS_PER_SEC,jmeter/results/tps_final.jtl)}</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
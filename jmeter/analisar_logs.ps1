# ================================================================
# SCRIPT DE AN√ÅLISE DE LOGS - JMeter + Sistema IoT
# ================================================================

Write-Host "üîç AN√ÅLISE DE LOGS - Sistema IoT Distribu√≠do" -ForegroundColor Green
Write-Host "=============================================" -ForegroundColor Green

# Verificar se o sistema est√° rodando
Write-Host "`nüì° 1. VERIFICANDO SISTEMA..." -ForegroundColor Yellow
$portCheck = netstat -an | findstr 9090
if ($portCheck) {
    Write-Host "‚úÖ Sistema ativo na porta 9090" -ForegroundColor Green
    Write-Host $portCheck
} else {
    Write-Host "‚ùå Sistema N√ÉO est√° rodando na porta 9090" -ForegroundColor Red
}

# Verificar logs do sistema
Write-Host "`nüìã 2. √öLTIMOS LOGS DO SISTEMA..." -ForegroundColor Yellow
if (Test-Path "logs/sistema-distribuido.log") {
    Write-Host "‚úÖ Arquivo de log encontrado" -ForegroundColor Green
    Write-Host "üìä √öltimas 10 linhas:" -ForegroundColor Cyan
    Get-Content -Path "logs/sistema-distribuido.log" -Tail 10
} else {
    Write-Host "‚ùå Arquivo de log N√ÉO encontrado" -ForegroundColor Red
}

# Verificar resultados do JMeter
Write-Host "`nüìä 3. RESULTADOS DO JMETER..." -ForegroundColor Yellow
$resultsDir = "jmeter/results"
if (Test-Path $resultsDir) {
    Write-Host "‚úÖ Pasta de resultados encontrada" -ForegroundColor Green
    $files = Get-ChildItem $resultsDir -Filter "*.jtl"
    if ($files.Count -gt 0) {
        Write-Host "üìÅ Arquivos de resultado:" -ForegroundColor Cyan
        foreach ($file in $files) {
            $size = [math]::Round($file.Length / 1KB, 2)
            Write-Host "   - $($file.Name) ($size KB) - $($file.LastWriteTime)" -ForegroundColor White
        }
        
        # Analisar o summary report se existir
        $summaryFile = "$resultsDir/summary_report.jtl"
        if (Test-Path $summaryFile) {
            Write-Host "`nüìà Resumo dos testes (√∫ltimas 5 linhas):" -ForegroundColor Cyan
            Get-Content $summaryFile -Tail 5
        }
    } else {
        Write-Host "‚ö†Ô∏è Nenhum arquivo de resultado encontrado" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå Pasta de resultados N√ÉO encontrada" -ForegroundColor Red
}

# Verificar logs do JMeter
Write-Host "`nüîß 4. LOGS DO JMETER..." -ForegroundColor Yellow
$jmeterLog = "jmeter.log"
if (Test-Path $jmeterLog) {
    Write-Host "‚úÖ Log do JMeter encontrado" -ForegroundColor Green
    Write-Host "üêõ √öltimas mensagens de erro/info:" -ForegroundColor Cyan
    Get-Content $jmeterLog -Tail 20 | Select-String -Pattern "(ERROR|WARN|INFO)" | Select-Object -Last 5
} else {
    Write-Host "‚ö†Ô∏è Log do JMeter n√£o encontrado no diret√≥rio atual" -ForegroundColor Yellow
}

Write-Host "`n‚úÖ AN√ÅLISE CONCLU√çDA!" -ForegroundColor Green
Write-Host "üí° Para monitorar em tempo real:" -ForegroundColor Cyan
Write-Host "   Get-Content -Path 'logs/sistema-distribuido.log' -Wait -Tail 10" -ForegroundColor White